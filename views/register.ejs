<!DOCTYPE html>
<html lang="en">

  <head>
    <link rel="icon" sizes="325x325" href="http://localhost:3000/images/save71_icon.webp">
    <meta property="og:title" content="Save71 Connects You and the World through Business.">
    <meta property="og:site_name" content="Save-71">
    <meta property="og:url" content="http://localhost:3000/registration">
    <meta property="og:description" content="Unlock Global Connectivity with Save71 for Business.">
    <meta property="og:type" content="business.business">
    <meta property="og:image" content="http://localhost:3000/images/logo-og.webp">

    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet" />

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css" />

    <!-- Custom Stylesheet -->
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/responsive.css" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Telephone -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/css/intlTelInput.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <title>Save 71</title>
  </head>

  <style>
    #loading-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(255, 255, 255, 0.8);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    #loading-gif {
      width: 100px;
      height: 100px;
    }

    .required-label::after {
      content: " *";
      color: red;
      /* You can adjust the color as needed */
    }
  </style>


  <script src="/js/index.js"></script>

  <script src="/js/location.js"></script>

  <body>
    <div id="loading-container" style="display: none">
      <img id="loading-gif" src="http://localhost:3000/images/loading.gif" alt="Loading..." />
    </div>
    <div class="d-flex justify-content-center align-items-center min-vh-100">
      <div class="d-flex flex-column row-gap-5 pt-5 input__field-group">
        <a href="/" style="display: contents; ">
          <img src="http://localhost:3000/images/logo.webp" class="mb-lg-5 mb-0 w-25"
            style="justify-self: center; align-self: center" />
        </a>

        <div class="d-flex flex-column">
          <form class="d-flex flex-column row-gap-4 px-5" action="/registration" method="POST">
            <div class="mb-3">
              <h5 class="text-center" style="color: red">
                <b><i>
                    <%= loginMessage %>
                  </i></b>
              </h5>
            </div>
            <div class="d-flex w-100 flex-column flex-lg-row row-gap-3 column-gap-5 input__field">
              <div class="">
                <label for="firstName" class="form-label">First Name:</label>
                <input type="text" class="form-control py-3" id="firstName" name="firstName"
                  placeholder="Enter your name.." required />
              </div>
              <div class="">
                <label for="lastName" class="form-label">Last Name:</label>
                <input type="text" class="form-control py-3" id="lastName" name="lastName"
                  placeholder="Enter your name.." required />
              </div>
            </div>
            <div class="d-flex w-100 column-gap-5 flex-column row-gap-3 flex-lg-row input__field">
              <div class="">
                <label for="inputEmail1" class="form-label">Email Id:</label>
                <input type="email" class="form-control py-3" id="inputEmail1" name="email" aria-describedby="emailHelp"
                  placeholder="info@xyz.com" required />
              </div>
              <div class="d-flex flex-column">
                <label for="phone" class="form-label">Mobile No:</label>
                <input type="text" class="form-control py-3" id="phone" name="phone" placeholder="YOUR NUMBER"
                  aria-describedby="numberHelp" required />
                <div id="error-msg" style="color: red; margin-top: 5px;"></div>
                <div id="valid-msg" style="color: green; margin-top: 5px;"></div>
              </div>
            </div>
            <div class="d-flex w-100 column-gap-5  flex-column row-gap-3 flex-lg-row input__field">
              <div class=" position-relative" style="height: fit-content;">
                <label for="inputPassword" class="form-label">Password</label>
                <input type="password" class="form-control py-3" id="inputPassword" name="password"
                  placeholder="Password" required />
                <span class="position-absolute" style="bottom: 15%; right: 5%" id="showPass"><i
                    class="bi bi-eye-fill fs-5 text-secondary"></i></span>
              </div>

              <div class="">
                <label for="shop_type" class="form-label">Shop Type</label>
                <select class="form-select py-3 me-2" id="shop_type" name="shop_type" required>
                  <option value="1">Manufacturer & Wholesalers</option>
                  <option value="2" selected>Shopping & Retail</option>
                </select>
              </div>
            </div>
            <div class="d-flex w-100 column-gap-5 flex-column row-gap-3 flex-lg-row input__field">
              <div class="">
                <label for="refId" class="form-label">Reference Number</label>
                <input type="text" class="form-control  py-3" name="refIdText" id="refId" placeholder="Ref Number"
                  required />
                <div id="error-msg-ref" style="color: red; margin-top: 5px;"></div>
                <div id="valid-msg-ref" style="color: green; margin-top: 5px;"></div>
              </div>

              <!-- DOB section -->
              <div class="">
                <label for="date-of-birth" class="form-label">Date of Birth</label>
                <div class="d-flex">
                  <div class="d-flex">
                    <!-- Dropdown for Month -->
                    <select class="form-select py-3 me-2" id="month" name="month" required>
                      <option value="" disabled selected>Month</option>
                      <!-- Generate month options with short names -->
                      <% const shortMonths=["Jan", "Feb" , "Mar" , "Apr" , "May" , "Jun" , "Jul" , "Aug" , "Sep" , "Oct"
                      , "Nov" , "Dec" ]; %>
                      <% for (let i=0; i < shortMonths.length; i++) { %>
                      <option value="<%= i + 1 %>">
                        <%= shortMonths[i] %>
                      </option>
                      <% } %>
                    </select>


                    <!-- Dropdown for Day -->
                    <select class="form-select py-3 me-2" id="day" name="day" required>
                      <option value="" disabled selected>Day</option>
                    </select>



                    <!-- Dropdown for Year -->
                    <select class="form-select py-3" id="year" name="year" required>
                      <option value="" disabled selected>Year</option>
                      <!-- Generate year options for the last 80 years -->
                      <% const currentYear=new Date().getFullYear(); %>
                      <% for (let i=currentYear; i>= currentYear - 80; i--) { %>
                      <option value="<%= i %>">
                        <%= i %>
                      </option>
                      <% } %>
                    </select>
                  </div>

                </div>
                <input type="hidden" id="combined-date" name="DOB" />
              </div>
              <!-- DOB section End -->


            </div>
            <div class=" pt-2" style="height: fit-content;">
              <div class="">
                <label class="form-label fw-semibold">Gender</label>
                <div>
                  <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="gender" id="male" value="male" required />
                    <label class="form-check-label" for="male">Male</label>
                  </div>
                  <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="gender" id="female" value="female" />
                    <label class="form-check-label" for="female">Female</label>
                  </div>
                  <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" name="gender" id="other" value="other" />
                    <label class="form-check-label" for="other">Other</label>
                  </div>
                </div>

                <button id="signUpButton" type="submit" class="btn btn-dark py-2 w-100 mt-5" disabled>
                  Sign Up
                </button>
              </div>
            </div>
            <div class="d-flex justify-content-between " style="height: fit-content;">
              <div class="col-6 ">
                <input type="text" id="latitude" name="latitude" placeholder="latitude" required readonly hidden />
              </div>
              <div class="col-6 ">
                <input type="text" id="longitude" name="longitude" placeholder="longitude" required readonly hidden />
              </div>
            </div>

          </form>
        </div>
      </div>
    </div>
  </body>
  <script src="/js/index.js"></script>

  <script src="https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/intlTelInput.min.js"></script>
  <script>
    window.intlTelInputGlobals.loadUtils("/js/utils.js"); // for isValidNumber function

    function getDecCCo(url) {
      return fetch(url)
        .then(response => response.json())
        .then(data => {
          return {
            countryCode: data.countryCode
          };
        })
        .catch(error => {
          console.error('Error:', error);
          throw error;
        });
    }

    async function initializeTelInput() {
      try {
        const apiUrl = `/__gCCo`;
        const {
          countryCode
        } = await getDecCCo(apiUrl);
        const input = document.querySelector("#phone");


        const telInput = intlTelInput(input, {
          initialCountry: countryCode || "auto",
          autoInsertDialCode: true,
          separateDialCode: false,
        });


        const errorDisplay = document.querySelector("#error-msg");
        const validDisplay = document.querySelector("#valid-msg");
        const submitButt = document.querySelector("#signUpButton");

        // Function to update the placeholder based on the selected country
        function updatePlaceholder() {
          const selectedCountryData = telInput.getSelectedCountryData();
          const newInputValue = "+" + selectedCountryData.dialCode;
          input.value = newInputValue;
        }

        // Function to check if the entered phone number is valid
        function checkValidNumber() {
          if (input.value.trim()) {
            if (telInput.isValidNumber()) {
              validDisplay.textContent = "Valid phone number";
              errorDisplay.textContent = "";
              submitButt.disabled = false;
            } else {
              validDisplay.textContent = "";
              errorDisplay.textContent = "Invalid phone number";
              submitButt.disabled = true;
            }
          }
        }

        updatePlaceholder();
        input.addEventListener("countrychange", updatePlaceholder);
        input.addEventListener("keyup", checkValidNumber); // Check validity on keyup event
      } catch (error) {
        console.error('Error:', error);
      }
    }

    initializeTelInput();
  </script>


  <!-- For Ref  ID -->
  <script>
    function getDecCCo(url) {
      return fetch(url)
        .then(response => response.json())
        .then(data => {
          return {
            countryCode: data.countryCode
          };
        })
        .catch(error => {
          console.error('Error:', error);
          throw error;
        });
    }

    async function initializeTelInput() {
      try {
        const apiUrl = `/__gCCo`;
        const {
          countryCode
        } = await getDecCCo(apiUrl);
        const input1 = document.querySelector("#refId");


        const telInput1 = intlTelInput(input1, {
          initialCountry: countryCode || "auto",
          autoInsertDialCode: true,
          separateDialCode: false,
        });


        const errorDisplayRef = document.querySelector("#error-msg-ref");
        const validDisplayRef = document.querySelector("#valid-msg-ref");
        const submitButt = document.querySelector("#signUpButton");

        // Function to update the placeholder based on the selected country
        function updatePlaceholder() {
          const selectedCountryData = telInput1.getSelectedCountryData();
          const newInputValue = "+" + selectedCountryData.dialCode;
          input1.value = newInputValue;
        }

        // Function to check if the entered phone number is valid
        function checkValidNumber() {
          if (input1.value.trim()) {
            if (telInput1.isValidNumber()) {
              validDisplayRef.textContent = "Valid phone number";
              errorDisplayRef.textContent = "";
              submitButt.disabled = false;
            } else {
              validDisplayRef.textContent = "";
              errorDisplayRef.textContent = "Invalid phone number";
              submitButt.disabled = true;
            }
          }
        }

        updatePlaceholder();
        input1.addEventListener("countrychange", updatePlaceholder);
        input1.addEventListener("keyup", checkValidNumber); // Check validity on keyup event
      } catch (error) {
        console.error('Error:', error);
      }
    }

    initializeTelInput();
  </script>

  <!-- Date function -->
  <script>
    // Function to update the hidden input with the combined date
    function updateCombinedDate() {
      const day = document.getElementById('day').value;
      const month = document.getElementById('month').value;
      const year = document.getElementById('year').value;

      // Create a Date object with the selected date components
      const dateObject = new Date(`${year}-${month}-${day}`);

      // Format the date as yyyy-mm-dd using toISOString
      const formattedDate = dateObject.toISOString().split('T')[0];

      document.getElementById('combined-date').value = formattedDate;
    }

    // Add event listeners to update the combined date when any of the inputs change
    document.getElementById('day').addEventListener('input', updateCombinedDate);
    document.getElementById('month').addEventListener('input', updateCombinedDate);
    document.getElementById('year').addEventListener('input', updateCombinedDate);
  </script>


  <script>
    $(document).ready(function () {
      // Initialize day dropdown based on the current month
      const currentMonth = new Date().getMonth() + 1; // Adding 1 to get 1-based month index
      $('#month').val(currentMonth);
      $('#month').trigger('change'); // Trigger the change event

      // Dynamically update the day dropdown based on the selected month
      $('#month').change(function () {
        const dayDropdown = $('#day');
        const selectedMonth = parseInt($(this).val());
        const daysInMonth = new Date($('#year').val(), selectedMonth, 0).getDate();

        // Clear existing options
        dayDropdown.empty();
        dayDropdown.append('<option value="" disabled selected>Day</option>');

        // Generate day options based on the selected month
        for (let i = 1; i <= daysInMonth; i++) {
          dayDropdown.append($('<option>', {
            value: i,
            text: i
          }));
        }
      });
    });
  </script>

  <script>
    function togglePassword() {
      const passwordInput = $('#inputPassword');
      const showPassIcon = $('#showPass');

      if (passwordInput.attr('type') === 'password') {
        passwordInput.attr('type', 'text');
        showPassIcon.html('<i class="bi bi-eye-slash-fill fs-5 text-secondary"></i>');
      } else {
        passwordInput.attr('type', 'password');
        showPassIcon.html('<i class="bi bi-eye-fill fs-5 text-secondary"></i>');
      }
    }

    $('#showPass').click(togglePassword);
  </script>

</html>